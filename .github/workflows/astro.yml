# Deploy Astro site to GitHub Pages — pnpm edition
#
# To get started with Astro see: https://docs.astro.build/en/getting-started/
name: Deploy Astro site to Pages

on:
  push:
    branches: ["main"]           # Deploy when pushing to main
  workflow_dispatch:             # Manual trigger from Actions tab

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  BUILD_PATH: "."                # Set to sub-folder if your site lives elsewhere

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      # ————— Checkout source —————
      - name: Checkout
        uses: actions/checkout@v4

      # ————— Detect package manager (now includes pnpm) —————
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/pnpm-lock.yaml" ]; then
            echo "manager=pnpm"                >> $GITHUB_OUTPUT
            echo "command=install --frozen-lockfile" >> $GITHUB_OUTPUT
            echo "runner=pnpm exec"            >> $GITHUB_OUTPUT
            echo "lockfile=pnpm-lock.yaml"     >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn"                >> $GITHUB_OUTPUT
            echo "command=install"             >> $GITHUB_OUTPUT
            echo "runner=yarn"                 >> $GITHUB_OUTPUT
            echo "lockfile=yarn.lock"          >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm"                 >> $GITHUB_OUTPUT
            echo "command=ci"                  >> $GITHUB_OUTPUT
            echo "runner=npx --no-install"     >> $GITHUB_OUTPUT
            echo "lockfile=package-lock.json"  >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      # ————— Setup Node.js —————
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
          cache-dependency-path: ${{ env.BUILD_PATH }}/${{ steps.detect-package-manager.outputs.lockfile }}

      # ————— Setup pnpm (only when detected) —————
      - name: Setup pnpm
        if: steps.detect-package-manager.outputs.manager == 'pnpm'
        uses: pnpm/action-setup@v2
        with:
          version: 9
          cache-dependency-path: ${{ env.BUILD_PATH }}/pnpm-lock.yaml

      # ————— Prepare GitHub Pages URL variables —————
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      # ————— Install dependencies —————
      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
        working-directory: ${{ env.BUILD_PATH }}

      # ————— Build Astro site —————
      - name: Build with Astro
        run: |
          ${{ steps.detect-package-manager.outputs.runner }} astro build \
            --site "${{ steps.pages.outputs.origin }}" \
            --base "${{ steps.pages.outputs.base_path }}"
        working-directory: ${{ env.BUILD_PATH }}

      # ————— Upload built site as artifact —————
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.BUILD_PATH }}/dist

  # ——————————————————————— Deploy job ———————————————————————
  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
